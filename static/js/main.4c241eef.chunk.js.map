{"version":3,"sources":["cms-logo.png","components/Header/index.js","components/Footer/index.js","components/ScreenHeader/index.js","components/Dashboard/index.js","container/DashboardContainer.js","components/Form/index.js","components/Table/index.js","components/SecondPage/index.js","container/SecondPageContainer.js","components/CodeBox/index.js","components/Card/index.js","components/Gallery/index.js","components/ThirdPage/index.js","container/ThirdPageContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","key","exact","to","activeClassName","Footer","href","target","rel","Icon","name","ScreenHeader","title","Dashboard","details","demo","src","logo","alt","id","DashboardContainer","connect","state","MyForm","Component","class","action","type","placeholder","value","SecondPage","console","log","SecondPageContainer","CodeBox","text","useState","copied","setCopied","Popup","trigger","join","onCopy","timeout","setTimeout","clearTimeout","content","open","inverted","Card","zoom","setZoomed","onClick","activeclassname","EditableGallery","props","handleSearchChange","event","setState","search","toLowerCase","elements","this","filteredElements","images","filter","element","includes","onChange","map","pull","ThirdPage","ThirdPageContainer","App","path","component","Boolean","window","location","hostname","match","store","createStore","combineReducers","getState","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4c241eef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cms-logo.9ce63631.png\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Header.css';\n\nconst Header = () => {\n  return (\n    <nav className=\"Header\">\n      <NavLink key=\"home\" className=\"Header-link\" exact to=\"/\" activeClassName=\"active\">Home</NavLink>\n      <NavLink key=\"second-page\" className=\"Header-link\" exact to=\"/page-two\" activeClassName=\"active\">Second Page</NavLink>\n      <NavLink key=\"third-page\" className=\"Header-link\" exact to=\"/page-three\" activeClassName=\"active\">Third Page</NavLink>\n    </nav>\n  );\n}\n\nexport default Header;","import React from \"react\";\nimport { Icon } from \"semantic-ui-react\";\nimport \"./Footer.css\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"footer-bottom\">\n      <span>Copyright Â© 2020 Adelina - peace out</span>\n      <span className='links'>\n      <a href={'/'} target=\"_blank\" rel=\"noopener noreferrer\">\n          <Icon name=\"book\"></Icon> Docs\n        </a>\n        <a href={'/'} target=\"_blank\" rel=\"noopener noreferrer\">\n          <Icon name=\"discourse\"></Icon> Forum\n        </a>\n      <a\n          href={'/'}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon name=\"conversation\"></Icon> Chat\n        </a>\n      </span>\n    </footer>\n  );\n}","import React from 'react';\nimport './ScreenHeader.css';\n\nconst ScreenHeader = ({title}) => {\n  return (\n    <header className=\"Screen-header\">\n      <h1 className=\"Screen-title\">{title}</h1>\n    </header>\n  );\n}\n\nexport default ScreenHeader;","import React from 'react';\nimport ScreenHeader from '../ScreenHeader';\nimport './Dashboard.css';\nimport logo from '../../cms-logo.png';\n\nconst Dashboard = ({details, demo}) => {\n  return (\n    <div className=\"Home\">\n      <div className=\"Background\"></div>\n      <div className=\"Home-text\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <ScreenHeader id=\"home-header\" title=\"Service for CMSSW Docker image building\"/>\n        <p>Build your CMS docker images!</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;","import { connect } from 'react-redux'\nimport Dashboard from '../components/Dashboard'\n\nconst mapStateToProps = (state) => {\n  return {\n    details: 0,\n    demo: state.demo\n  };\n};\n\nconst DashboardContainer = connect(\n  mapStateToProps,\n  null\n)(Dashboard)\n\nexport default DashboardContainer","import React from 'react';\n//import { Navbar, Nav, NavItem, NavDropdown, MenuItem, Button } from 'react-bootstrap';\nimport { Form, FormControl } from 'react-form-control';\nimport { Nav, NavItem, NavLink } from 'reactstrap';\n//import './Form.scss'\n\nconst MyForm = () => {\n    return (\n        <div className=\"Home\">\n            <form class=\"contact-form\" action=\"\">\n                <p>\n                    <input class=\"gutter\" type=\"text\" placeholder=\"OS\"/>\n                </p>\n                <p>\n                    <input class=\"gutter\" type=\"text\" placeholder=\"CMSSW\"/>\n                </p>\n                <p>\n                    <input type=\"text\" placeholder=\"SCRAM_ARCH\"/>\n                </p>\n                <input type=\"submit\" value=\"Request image\"></input>\n            </form>\n        </div>\n    );\n}\n\nexport default MyForm","import React, { Component } from 'react'\nimport './Table.css';\n\nclass Table extends Component {\n\n    renderTableData(images) {\n        return images.map((student, index) => {\n        const { id, name, tag, createdAt } = student //destructuring\n        return (\n            <tr key={id}>\n                <td>{id}</td>\n                <td>{name}</td>\n                <td>{tag}</td>\n                <td>{createdAt}</td>\n            </tr>\n        )\n        })\n    }\n\n    renderTableHeader(images) {\n        let header = Object.keys(images[0])\n        return header.map((key, index) => {\n        return <th key={index}>{key.toUpperCase()}</th>\n        })\n    }\n\n    render() {\n        var test = this.props;\n        console.log({test}.test.images.images)\n        return (\n        <div>\n            <table id='students'>\n                <tbody>\n                    <tr>{this.renderTableHeader({test}.test.images.images)}</tr>\n                    {this.renderTableData({test}.test.images.images)}\n                </tbody>\n            </table>\n        </div>\n        )\n    }\n}\n\nexport default Table","import React from 'react'\nimport ScreenHeader from '../ScreenHeader';\nimport './SecondPage.css';\nimport Table from '../Table'\n//import { Navbar, Nav, NavItem, NavDropdown, MenuItem, Button } from 'react-bootstrap';\nimport { Form, FormControl } from 'react-form-control';\nimport { Nav, NavItem, NavLink } from 'reactstrap';\nimport MyForm from '../Form';\n\n//<Table images={demo}/>\n\nconst SecondPage = ({demo}) => {\n    const handleSubmit = () => {\n        console.log(\"data submitted!\");\n    }\n\n    console.log(\"Reducer three is\", {demo});\n    return (\n        <div className=\"Home\">\n            <div className=\"Background\"></div>\n            <div className=\"Home-text\">\n                <ScreenHeader id=\"home-header\" title=\"Request an image\"/>\n            <div>\n            <MyForm />\n            </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SecondPage","import { connect } from 'react-redux'\nimport SecondPage from '../components/SecondPage'\n\nconst mapStateToProps = (state) => {\n  return {\n    details: state.details,\n    demo: state.demo\n  }\n}\n\nconst SecondPageContainer = connect(\n  mapStateToProps,\n  null\n)(SecondPage)\n\nexport default SecondPageContainer","import React, { useState } from \"react\";\nimport { Icon, Popup } from \"semantic-ui-react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport \"./CodeBox.css\";\n\nconst COPY_CHECK_TIMEOUT = 1500;\n\nconst CodeBox = ({text}) => {\n  const [copied, setCopied] = useState(false);\n\n  const handleCopied = () => {\n    setCopied(true);\n\n    const timeout = setTimeout(() => {\n      setCopied(false);\n      clearTimeout(timeout);\n    }, COPY_CHECK_TIMEOUT);\n  };\n\n  return (\n    <div className=\"container\">\n      <div\n        className=\"content\">\n      </div>\n      {text}\n        <Popup\n          trigger={\n            <CopyToClipboard\n              text={{text}.text.join(\"\")}\n              onCopy={handleCopied}\n            >\n              <Icon name=\"copy outline\" className=\"copy-icon\" />\n            </CopyToClipboard>\n          }\n          content=\"Copied!\"\n          open={copied}\n          inverted\n        />\n    </div>\n  );\n}\n\nexport default CodeBox;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Card.css';\nimport CodeBox from '../CodeBox';\n\nconst Card = ({name , text}) => {\n\n  const [zoom, setZoomed] = useState(false);\n\n  const handleZoomIn = () => {\n    setZoomed(true);\n    console.log({setZoomed});\n  }\n\n  const handleZoomOut = () => {\n      setZoomed(false);\n      console.log({setZoomed});\n  }\n\n  return (\n    <span onClick={() => zoom ? handleZoomIn() : handleZoomOut()}>\n      <Link to=\"/page-three\">\n        <div className=\"Card\" activeclassname=\"active-card\">\n          <div className=\"Card-element\">\n            <div className=\"Card-description\">{name}</div>\n            <CodeBox text={text}/>\n          </div>\n        </div>\n      </Link>\n    </span>\n  );\n}\n\nexport default Card;","import React, { Component } from 'react';\nimport Card from '../Card';\nimport '../../App.css';\nimport './Gallery.css';\n\nclass EditableGallery extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: \"\"\n    };\n  }\n\n  handleSearchChange = (event) => {\n    this.setState({search: event.target.value.toLowerCase()});\n    console.log(this.state)\n  }\n\n  render() {\n    const {elements} = this.props;\n    const {search} = this.state;\n    const filteredElements = {elements}.elements.images.filter(element => element.name.toLowerCase().includes(search));\n    console.log(\"Hey look here\", {filteredElements})\n    return (\n      <div>\n        <input\n          className=\"search\"\n          type=\"text\"\n          value={search}\n          onChange={(event) => this.handleSearchChange(event)}\n          placeholder=\"Search...\"/>\n        <div className=\"Elements\">\n          {\n            filteredElements.map(element => {\n              console.log({element}.element);\n              return  <span key={element.id} className=\"Element\">\n                        <Card name={element.name} text={[\"docker pull \", {element}.element.pull]}/>\n                      </span>\n            })\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EditableGallery;","import React from 'react'\nimport ScreenHeader from '../ScreenHeader';\nimport './ThirdPage.css'\nimport Gallery from '../Gallery';\n\n\nconst ThirdPage = ({demo}) => {\n    console.log(\"Reducer third page is \", {demo}.demo.images)\n    console.log(\"Hey Clemens\")\n    return (\n        <div className=\"Home\">\n            <div className=\"Background\"></div>\n            <div className=\"Home-text\">\n            <ScreenHeader id=\"home-header\" title=\"Find your image\"/>\n            <Gallery elements={demo}/>\n         </div>\n        </div>\n        );\n    }\n\nexport default ThirdPage","import { connect } from 'react-redux'\nimport ThirdPage from '../components/ThirdPage'\n\nconst mapStateToProps = (state) => {\n  return {\n    details: state.details,\n    demo: state.demo\n  }\n}\n\nconst ThirdPageContainer = connect(\n  mapStateToProps,\n  null\n)(ThirdPage)\n\nexport default ThirdPageContainer","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport DashboardContainer from './container/DashboardContainer'\nimport SecondPageContainer from './container/SecondPageContainer'\nimport ThirdPageContainer from './container/ThirdPageContainer'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header/>\n        <div className=\"Content\">\n          <Switch>\n            <Route exact path=\"/\" component={DashboardContainer}/>\n            <Route exact path=\"/page-two\" component={SecondPageContainer}/>\n            <Route exact path=\"/page-three\" component={ThirdPageContainer}/>\n          </Switch>\n        </div>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router} from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { combineReducers } from 'redux'\nimport 'semantic-ui-css/semantic.min.css';\n\nimport elements from './data/images.json';\n\nconst elements2 = {\n  images: [\n    { id: 1, name: 'CMSSW_10_6_8_patch1', tag: '2020-02-19-df153472', createdAt: '2020-02-19'},\n    { id: 2, name: 'CMSSW_10_6_8_patch1', tag: '2020-05-12-cdf5c9a1', createdAt: '2020-05-12'},\n    { id: 3, name: 'CMSSW_7_1_25_patch5', tag: '2020-02-13-899c1373', createdAt: '2020-02-13'},\n    { id: 4, name: 'CMSSW_7_1_25_patch5', tag: '2020-02-18-847c8252', createdAt: '2020-02-18'},\n    { id: 5, name: 'CMSSW_9_2_1', tag: '2020-02-19-df153472', createdAt: '2020-02-19'},\n    { id: 6, name: 'CMSSW_9_3_9', tag: '2020-02-19-5e7c8abc', createdAt: '2020-02-19'},\n  ]\n}\n\nconst myReducer = (state = elements, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n}\n\nconst store = createStore(\n  combineReducers({\n    demo: myReducer\n  })\n);\n\nconsole.log(\"Reducer is\", store.getState());\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}