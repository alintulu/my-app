{"version":3,"sources":["cms-logo.png","components/Header/index.js","components/Footer/index.js","components/ScreenHeader/index.js","components/Dashboard/index.js","container/DashboardContainer.js","components/Table/index.js","components/DropDown/index.js","components/DownShift/index.js","components/DownShift2/index.js","components/SecondPage/index.js","container/SecondPageContainer.js","components/CodeBox/index.js","components/Card/index.js","components/Gallery/index.js","components/ThirdPage/index.js","container/ThirdPageContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","key","exact","to","activeClassName","Footer","href","target","rel","Icon","name","ScreenHeader","title","Dashboard","details","demo","src","logo","alt","id","DashboardContainer","connect","state","Component","downShift","props","books","cmssw","onChange","selectedBook","dispatch","type","chosen_release","alert","itemToString","getInputProps","getItemProps","isOpen","inputValue","highlightedIndex","selectedItem","getLabelProps","highlightedItem","getToggleButtonProps","toggleMenu","clearSelection","style","marginTop","display","placeholder","text","filter","item","release","toLowerCase","includes","map","index","isActive","isSelected","backgroundColor","fontWeight","useStyles","makeStyles","theme","createStyles","root","width","spacing","borderColor","DownShiftContainer","buildImage","classes","console","log","Autocomplete","alignItems","justifyContent","event","value","selected","kind","selected_release","scram_arch_list","scram_archs","selected_scram_arch","scram_arch","request_image","request_scram_arch","options","getOptionLabel","option","params","TextField","label","margin","inputRoot","fullWidth","SecondPage","releases","compatible_scram_archs","compatible_scram_arch","c","image","SecondPageContainer","CodeBox","useState","copied","setCopied","Popup","trigger","join","onCopy","timeout","setTimeout","clearTimeout","content","open","inverted","Card","zoom","setZoomed","onClick","activeclassname","EditableGallery","handleSearchChange","setState","search","this","filteredElements","images","element","pull","ThirdPage","elements","ThirdPageContainer","App","path","component","Boolean","window","location","hostname","match","initialState","defaultDownShift","initalBuildImageState","store","createStore","combineReducers","action","new_chosen_release","getState","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0ac676e1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cms-logo.9ce63631.png\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Header.css';\n\nconst Header = () => {\n  return (\n    <nav className=\"Header\">\n      <NavLink key=\"home\" className=\"Header-link\" exact to=\"/\" activeClassName=\"active\">Home</NavLink>\n      <NavLink key=\"second-page\" className=\"Header-link\" exact to=\"/page-two\" activeClassName=\"active\">Second Page</NavLink>\n      <NavLink key=\"third-page\" className=\"Header-link\" exact to=\"/page-three\" activeClassName=\"active\">Third Page</NavLink>\n    </nav>\n  );\n}\n\nexport default Header;","import React from \"react\";\nimport { Icon } from \"semantic-ui-react\";\nimport \"./Footer.css\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"footer-bottom\">\n      <span>Copyright © 2020 Adelina - peace out</span>\n      <span className='links'>\n      <a href={'/'} target=\"_blank\" rel=\"noopener noreferrer\">\n          <Icon name=\"book\"></Icon> Docs\n        </a>\n        <a href={'/'} target=\"_blank\" rel=\"noopener noreferrer\">\n          <Icon name=\"discourse\"></Icon> Forum\n        </a>\n      <a\n          href={'/'}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon name=\"conversation\"></Icon> Chat\n        </a>\n      </span>\n    </footer>\n  );\n}","import React from 'react';\nimport './ScreenHeader.css';\n\nconst ScreenHeader = ({title}) => {\n  return (\n    <header className=\"Screen-header\">\n      <h1 className=\"Screen-title\">{title}</h1>\n    </header>\n  );\n}\n\nexport default ScreenHeader;","import React from 'react';\nimport ScreenHeader from '../ScreenHeader';\nimport './Dashboard.css';\nimport logo from '../../cms-logo.png';\n\nconst Dashboard = ({details, demo}) => {\n  return (\n    <div className=\"Home\">\n      <div className=\"Background\"></div>\n      <div className=\"Home-text\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <ScreenHeader id=\"home-header\" title=\"Service for CMSSW Docker image building\"/>\n        <p>Build your CMS docker images!</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;","import { connect } from 'react-redux'\nimport Dashboard from '../components/Dashboard'\n\nconst mapStateToProps = (state) => {\n  return {\n    details: 0,\n    demo: state.demo\n  };\n};\n\nconst DashboardContainer = connect(\n  mapStateToProps,\n  null\n)(Dashboard)\n\nexport default DashboardContainer","import React, { Component } from 'react'\nimport './Table.css';\n\nclass Table extends Component {\n\n    renderTableData(images) {\n        return images.map((student, index) => {\n        const { id, name, tag, createdAt } = student //destructuring\n        return (\n            <tr key={id}>\n                <td>{id}</td>\n                <td>{name}</td>\n                <td>{tag}</td>\n                <td>{createdAt}</td>\n            </tr>\n        )\n        })\n    }\n\n    renderTableHeader(images) {\n        let header = Object.keys(images[0])\n        return header.map((key, index) => {\n        return <th key={index}>{key.toUpperCase()}</th>\n        })\n    }\n\n    render() {\n        var test = this.props;\n        console.log({test}.test.images.images)\n        return (\n        <div>\n            <table id='students'>\n                <tbody>\n                    <tr>{this.renderTableHeader({test}.test.images.images)}</tr>\n                    {this.renderTableData({test}.test.images.images)}\n                </tbody>\n            </table>\n        </div>\n        )\n    }\n}\n\nexport default Table","import React from \"react\";\nimport Downshift from \"downshift\";\nimport './DropDown.css'\nimport { connect } from 'react-redux'\n\nconst MyDownPage = (props) =>  {\n\n\n  const books = props.books;\n  const cmssw = props.cmssw;\n\n  const onChange = (selectedBook, cmssw) => {\n    if (cmssw === true)  {\n      props.dispatch({\n        type: 'CHANGE',\n        chosen_release: {selectedBook}.selectedBook\n      }) \n    } else {\n      alert('hey');\n    }\n  };\n\n  return (\n    <Downshift\n      onChange={onChange}\n      itemToString={books => (books ? books.name : \"\")}\n    >\n      {({\n        getInputProps,\n        getItemProps,\n        isOpen,\n        inputValue,\n        highlightedIndex,\n        selectedItem,\n        highlightedItem,\n        getLabelProps,\n        getToggleButtonProps,\n        toggleMenu,\n        clearSelection,\n      }) => (\n        <div>\n          <label\n            style={{ marginTop: \"1rem\", display: \"block\" }}\n            {...getLabelProps()}\n          >\n          </label>{\" \"}\n          <br />\n          <input \n            {...getInputProps({ \n              placeholder: props.text \n            })} \n          />\n          {isOpen ? (\n            <div className=\"downshift-dropdown\">\n              {books\n                .filter(\n                  item =>\n                    !inputValue ||\n                    item.release.toLowerCase().includes(inputValue.toLowerCase())\n                )\n                .map((item, index) => (\n                  <div\n                    className=\"dropdown-item\"\n                    {...getItemProps({ \n                      key: item.release,\n                      index,\n                      item,\n                      isActive: highlightedIndex === index,\n                      isSelected: selectedItem === item, })}\n                    style={{\n                      backgroundColor:\n                        highlightedIndex === index ? \"lightgray\" : \"white\",\n                      fontWeight: selectedItem === item ? \"bold\" : \"normal\"\n                    }}\n                  >\n                    {item.release}\n                  </div>\n                ))}\n            </div>\n          ) : null}\n        </div>\n      )}\n    </Downshift>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    downShift: state.downShift\n  }\n}\n\nconst DropDownContainer = connect(\n  mapStateToProps,\n  null\n)(MyDownPage)\n\nexport default DropDownContainer\n","import React from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { connect } from 'react-redux';\nimport './DownShift.css';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n        width: 500,\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n        \"&:hover .MuiOutlinedInput-notchedOutline\": {\n            borderColor: \"red\"\n        },\n    },\n  }),\n);\n\nconst ComboBox = (props) => {\n\n  const onChange = (selected, kind) => {\n\n    const selected_release = selected == null ? \"\" : selected.release;\n    const scram_arch_list = selected == null \n      ? {\n          release: \"\",\n          scram_archs: []\n        } : selected;\n    const selected_scram_arch = selected == null ? \"\" : selected.scram_arch;\n\n    if ( kind === \"release\" )  {\n      props.dispatch({\n        type: 'REQUEST_IMAGE',\n        request_image: selected_release\n      })\n      props.dispatch({\n        type: 'CREATE_SCRAM_ARCH_LIST',\n        scram_arch_list: scram_arch_list\n      })\n    } else if ( kind === \"scram_arch\" ) {\n      props.dispatch({\n        type: 'REQUEST_SCRAM_ARCH',\n        request_scram_arch: selected_scram_arch\n      }) \n    }\n  };\n\n  const classes = useStyles();\n  console.log(\"books\" , props.buildImage);\n\n  return (\n      <div className={classes.root}>\n      <Autocomplete style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        }}\n        onChange={(event, value) => onChange(value, props.kind)}\n        id={props.text}\n        options={props.books}\n        getOptionLabel={(option) => option.release}\n        style={{ width: 300 }}\n        renderInput={(params) => <TextField \n            {...params} \n            label={props.text}\n            margin=\"normal\"\n            className={classes.inputRoot}\n            fullWidth />}\n        />\n        </div>\n    );\n  }\n\n  const mapStateToProps = (state) => {\n    return {\n      downShift: state.downShift,\n      buildImage: state.buildImage\n    }\n  }\n  \n  const DownShiftContainer = connect(\n    mapStateToProps,\n    null\n  )(ComboBox)\n  \n  export default DownShiftContainer\n  ","import React from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { connect } from 'react-redux';\nimport './DownShift.css';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n        width: 500,\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n        \"&:hover .MuiOutlinedInput-notchedOutline\": {\n            borderColor: \"red\"\n        },\n    },\n  }),\n);\n\nconst ComboBox2 = (props) => {\n\n  const onChange = (selected, kind) => {\n\n    const selected_release = selected == null ? \"\" : selected.release;\n    const scram_arch_list = selected == null \n      ? {\n          release: \"\",\n          scram_archs: []\n        } : selected;\n    const selected_scram_arch = selected == null ? \"\" : selected.scram_arch;\n\n    if ( kind === \"release\" )  {\n      props.dispatch({\n        type: 'REQUEST_IMAGE',\n        request_image: selected_release\n      })\n      props.dispatch({\n        type: 'CREATE_SCRAM_ARCH_LIST',\n        scram_arch_list: scram_arch_list\n      })\n    } else if ( kind === \"scram_arch\" ) {\n      props.dispatch({\n        type: 'REQUEST_SCRAM_ARCH',\n        request_scram_arch: selected_scram_arch\n      }) \n    }\n  };\n\n  const classes = useStyles();\n  console.log(\"books\" , props.buildImage);\n\n  return (\n      <div className={classes.root}>\n      <Autocomplete style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        }}\n        onChange={(event, value) => onChange(value, props.kind)}\n        id={props.text}\n        options={props.books}\n        getOptionLabel={(option) => option.scram_arch}\n        style={{ width: 300 }}\n        renderInput={(params) => <TextField \n            {...params} \n            label={props.text}\n            margin=\"normal\"\n            className={classes.inputRoot}\n            fullWidth />}\n        />\n        </div>\n    );\n  }\n\n  const mapStateToProps = (state) => {\n    return {\n      downShift: state.downShift,\n      buildImage: state.buildImage\n    }\n  }\n  \n  const DownShiftContainer = connect(\n    mapStateToProps,\n    null\n  )(ComboBox2)\n  \n  export default DownShiftContainer\n  ","import React from 'react'\nimport ScreenHeader from '../ScreenHeader';\nimport './SecondPage.css';\nimport Table from '../Table'\n//import { Navbar, Nav, NavItem, NavDropdown, MenuItem, Button } from 'react-bootstrap';\nimport { Form, FormControl } from 'react-form-control';\nimport { Nav, NavItem, NavLink } from 'reactstrap';\nimport MyForm from '../Form';\nimport DropDown from '../DropDown';\nimport ComboBox from '../DownShift';\nimport ComboBox2 from '../DownShift2';\n\n//<Table images={demo}/>\n//<MyForm />\n//<div>\n//<DropDown books={releases} text=\"Search CMSSW releases..\" cmssw={true}/>\n//</div>\n//<div>\n//<DropDown books={books2} text=\"Search SCRAM versions..\" cmssw={false}/>\n//</div>\n\nconst books = [\n    { name: \"Harry Potter\" },\n    { name: \"Net Moves\" },\n    { name: \"Half of a yellow sun\" },\n    { name: \"The Da Vinci Code\" },\n    { name: \"Born a crime\" }\n];\n  \nconst books2 = [\n    { name: \"Harry Potter2\" },\n    { name: \"Net Moves2\" },\n    { name: \"Half of a yellow sun2\" },\n    { name: \"The Da Vinci Code2\" },\n    { name: \"Born a crime2\" }\n];\n\nconst SecondPage = (props) => {\n\n    const releases = props.demo.releases;\n    const compatible_scram_archs = props.buildImage.compatible_scram_arch.scram_archs.map( c => {\n        var info =  {\n            scram_arch: c\n        }\n        return info;\n    })\n\n    return (\n        \n        <div className=\"Home\">\n            <div className=\"Background\"></div>\n            <div className=\"Home-text\">\n                <ScreenHeader id=\"home-header\" title=\"Request an image\"/>\n                <p>Start by choosing a CMSSW release. You have chosen</p>\n                <p className=\"Chosen-text\">{props.buildImage.image === \"\" ? \"None\" : props.buildImage.image}</p>\n                <p>Next choose the SCRAM ARCH version. You have chosen</p>\n                <p className=\"Chosen-text\">{props.buildImage.scram_arch === \"\" ? \"None\" : props.buildImage.scram_arch}</p>\n            <div style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                }}>\n                <ComboBox books={releases} kind=\"release\" text=\"CMSSW releases\"/>\n                <ComboBox2 books={compatible_scram_archs} kind=\"scram_arch\" text=\"SCRAM ARCH versions\"/>\n            </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SecondPage","import { connect } from 'react-redux'\nimport SecondPage from '../components/SecondPage'\n\nconst mapStateToProps = (state) => {\n  return {\n    demo: state.demo,\n    downShift: state.downShift,\n    buildImage: state.buildImage\n  }\n}\n\nconst SecondPageContainer = connect(\n  mapStateToProps,\n  null\n)(SecondPage)\n\nexport default SecondPageContainer","import React, { useState } from \"react\";\nimport { Icon, Popup } from \"semantic-ui-react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport \"./CodeBox.css\";\n\nconst COPY_CHECK_TIMEOUT = 1500;\n\nconst CodeBox = ({text}) => {\n  const [copied, setCopied] = useState(false);\n\n  const handleCopied = () => {\n    setCopied(true);\n\n    const timeout = setTimeout(() => {\n      setCopied(false);\n      clearTimeout(timeout);\n    }, COPY_CHECK_TIMEOUT);\n  };\n\n  return (\n    <div className=\"container\">\n      <div\n        className=\"content\">\n      </div>\n      {text}\n        <Popup\n          trigger={\n            <CopyToClipboard\n              text={{text}.text.join(\"\")}\n              onCopy={handleCopied}\n            >\n              <Icon name=\"copy outline\" className=\"copy-icon\" />\n            </CopyToClipboard>\n          }\n          content=\"Copied!\"\n          open={copied}\n          inverted\n        />\n    </div>\n  );\n}\n\nexport default CodeBox;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Card.css';\nimport CodeBox from '../CodeBox';\n\nconst Card = ({name , text}) => {\n\n  const [zoom, setZoomed] = useState(false);\n\n  const handleZoomIn = () => {\n    setZoomed(true);\n    console.log({setZoomed});\n  }\n\n  const handleZoomOut = () => {\n      setZoomed(false);\n      console.log({setZoomed});\n  }\n\n  return (\n    <span onClick={() => zoom ? handleZoomIn() : handleZoomOut()}>\n      <Link to=\"/page-three\">\n        <div className=\"Card\" activeclassname=\"active-card\">\n          <div className=\"Card-element\">\n            <div className=\"Card-description\">{name}</div>\n            <CodeBox text={text}/>\n          </div>\n        </div>\n      </Link>\n    </span>\n  );\n}\n\nexport default Card;","import React, { Component } from 'react';\nimport Card from '../Card';\nimport '../../App.css';\nimport './Gallery.css';\n\nclass EditableGallery extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: \"\"\n    };\n  }\n\n  handleSearchChange = (event) => {\n    this.setState({search: event.target.value.toLowerCase()});\n    console.log(this.state)\n  }\n\n  render() {\n    //const {elements} = this.props;\n    const {search} = this.state;\n    const filteredElements = this.props.images.filter(element => element.name.toLowerCase().includes(search));\n    console.log(\"Hey look here\", {filteredElements})\n    return (\n      <div>\n        <input\n          className=\"search\"\n          type=\"text\"\n          value={search}\n          onChange={(event) => this.handleSearchChange(event)}\n          placeholder=\"Search...\"/>\n        <div className=\"Elements\">\n          {\n            filteredElements.map(element => {\n              console.log({element}.element);\n              return  <span key={element.id} className=\"Element\">\n                        <Card name={element.name} text={[\"docker pull \", {element}.element.pull]}/>\n                      </span>\n            })\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EditableGallery;","import React from 'react'\nimport ScreenHeader from '../ScreenHeader';\nimport './ThirdPage.css'\nimport Gallery from '../Gallery';\n\n\nconst ThirdPage = ({demo}) => {\n    const images = {demo}.demo.elements.images;\n    console.log(\"Reducer third page is \", {images})\n    console.log(\"Hey Clemens\")\n    return (\n        <div className=\"Home\">\n            <div className=\"Background\"></div>\n            <div className=\"Home-text\">\n            <ScreenHeader id=\"home-header\" title=\"Find your image\"/>\n            <Gallery images={images} />\n         </div>\n        </div>\n        );\n    }\n\nexport default ThirdPage","import { connect } from 'react-redux'\nimport ThirdPage from '../components/ThirdPage'\n\nconst mapStateToProps = (state) => {\n  return {\n    demo: state.demo\n  }\n}\n\nconst ThirdPageContainer = connect(\n  mapStateToProps,\n  null\n)(ThirdPage)\n\nexport default ThirdPageContainer","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport DashboardContainer from './container/DashboardContainer'\nimport SecondPageContainer from './container/SecondPageContainer'\nimport ThirdPageContainer from './container/ThirdPageContainer'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header/>\n        <div className=\"Content\">\n          <Switch>\n            <Route exact path=\"/\" component={DashboardContainer}/>\n            <Route exact path=\"/page-two\" component={SecondPageContainer}/>\n            <Route exact path=\"/page-three\" component={ThirdPageContainer}/>\n          </Switch>\n        </div>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router} from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { combineReducers } from 'redux'\nimport 'semantic-ui-css/semantic.min.css';\n\nimport elements from './data/images.json';\nimport releases from './data/cmssw_releases.json';\n\nconst initialState = {\n  elements: elements,\n  releases: releases\n}\n\nconst myDemoReducer = (state = initialState, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n}\n\nconst defaultDownShift = {\n  chosen_release: \"\"\n};\n\nconst DownShiftReducer = (state = defaultDownShift, action) => {\n  const new_chosen_release = action.chosen_release;\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        chosen_release: new_chosen_release\n      }\n    default:\n      return state;\n  }\n}\n\nconst initalBuildImageState = {\n  image: \"\",\n  scram_arch: \"\",\n  compatible_scram_arch: {\n    release: \"\",\n    scram_archs: []\n  }\n};\n\nconst BuildImageReducer = (state = initalBuildImageState, action) => {\n  const request_image = action.request_image;\n  const request_scram_arch = action.request_scram_arch;\n  const scram_arch_list = action.scram_arch_list;\n  switch (action.type) {\n    case 'REQUEST_IMAGE':\n      return {\n        ...state,\n        image: request_image,\n        scram_arch: \"\"\n      }\n    case 'REQUEST_SCRAM_ARCH':\n      return {\n        ...state,\n        scram_arch: request_scram_arch\n      }\n    case 'CREATE_SCRAM_ARCH_LIST':\n      return {\n        ...state,\n        compatible_scram_arch: scram_arch_list\n      }\n    default:\n      return state;\n  }\n}\n\nconst store = createStore(\n  combineReducers({\n    demo: myDemoReducer,\n    downShift: DownShiftReducer,\n    buildImage: BuildImageReducer\n  })\n);\n\nconsole.log(\"Reducer is\", store.getState());\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}