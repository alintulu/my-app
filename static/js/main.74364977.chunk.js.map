{"version":3,"sources":["cms-logo.png","components/Header/index.js","components/Footer/index.js","components/ScreenHeader/index.js","components/Dashboard/index.js","container/DashboardContainer.js","components/Table/index.js","components/SecondPage/index.js","container/SecondPageContainer.js","components/Card/index.js","components/Gallery/index.js","components/ThirdPage/index.js","container/ThirdPageContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","key","exact","to","activeClassName","Footer","href","target","rel","Icon","name","ScreenHeader","title","Dashboard","details","demo","src","logo","alt","id","DashboardContainer","connect","state","Table","images","map","student","index","tag","createdAt","Object","keys","toUpperCase","test","this","props","console","log","renderTableHeader","renderTableData","Component","SecondPage","SecondPageContainer","Card","EditableGallery","handleSearchChange","event","setState","search","value","toLowerCase","elements","filteredElements","filter","element","includes","type","onChange","placeholder","ThirdPage","ThirdPageContainer","App","path","component","Boolean","window","location","hostname","match","store","createStore","combineReducers","action","getState","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.74364977.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cms-logo.9ce63631.png\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Header.css';\n\nconst Header = () => {\n  return (\n    <nav className=\"Header\">\n      <NavLink key=\"home\" className=\"Header-link\" exact to=\"/\" activeClassName=\"active\">Home</NavLink>\n      <NavLink key=\"second-page\" className=\"Header-link\" exact to=\"/page-two\" activeClassName=\"active\">Second Page</NavLink>\n      <NavLink key=\"third-page\" className=\"Header-link\" exact to=\"/page-three\" activeClassName=\"active\">Third Page</NavLink>\n    </nav>\n  );\n}\n\nexport default Header;","import React from \"react\";\nimport { Icon } from \"semantic-ui-react\";\nimport \"./Footer.css\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"footer-bottom\">\n      <span>Copyright Â© 2020 Adelina - peace out</span>\n      <span className='links'>\n      <a href={'/'} target=\"_blank\" rel=\"noopener noreferrer\">\n          <Icon name=\"book\"></Icon> Docs\n        </a>\n        <a href={'/'} target=\"_blank\" rel=\"noopener noreferrer\">\n          <Icon name=\"discourse\"></Icon> Forum\n        </a>\n      <a\n          href={'/'}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon name=\"conversation\"></Icon> Chat\n        </a>\n      </span>\n    </footer>\n  );\n}","import React from 'react';\nimport './ScreenHeader.css';\n\nconst ScreenHeader = ({title}) => {\n  return (\n    <header className=\"Screen-header\">\n      <h1 className=\"Screen-title\">{title}</h1>\n    </header>\n  );\n}\n\nexport default ScreenHeader;","import React from 'react';\nimport ScreenHeader from '../ScreenHeader';\nimport './Dashboard.css';\nimport logo from '../../cms-logo.png';\n\nconst Dashboard = ({details, demo}) => {\n  return (\n    <div className=\"Home\">\n      <div className=\"Home-text\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <ScreenHeader id=\"home-header\" title=\"Service for CMSSW Docker image building\"/>\n        <p>Build your CMS docker images!</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;","import { connect } from 'react-redux'\nimport Dashboard from '../components/Dashboard'\n\nconst mapStateToProps = (state) => {\n  return {\n    details: 0,\n    demo: state.demo\n  };\n};\n\nconst DashboardContainer = connect(\n  mapStateToProps,\n  null\n)(Dashboard)\n\nexport default DashboardContainer","import React, { Component } from 'react'\nimport './Table.css';\n\nclass Table extends Component {\n\n    renderTableData(images) {\n        return images.map((student, index) => {\n        const { id, name, tag, createdAt } = student //destructuring\n        return (\n            <tr key={id}>\n                <td>{id}</td>\n                <td>{name}</td>\n                <td>{tag}</td>\n                <td>{createdAt}</td>\n            </tr>\n        )\n        })\n    }\n\n    renderTableHeader(images) {\n        let header = Object.keys(images[0])\n        return header.map((key, index) => {\n        return <th key={index}>{key.toUpperCase()}</th>\n        })\n    }\n\n    render() {\n        var test = this.props;\n        console.log({test}.test.images.images)\n        return (\n        <div>\n            <table id='students'>\n                <tbody>\n                    <tr>{this.renderTableHeader({test}.test.images.images)}</tr>\n                    {this.renderTableData({test}.test.images.images)}\n                </tbody>\n            </table>\n        </div>\n        )\n    }\n}\n\nexport default Table","import React from 'react'\nimport ScreenHeader from '../ScreenHeader';\nimport './SecondPage.css';\nimport Table from '../Table'\n\nconst SecondPage = ({demo}) => {\n    console.log(\"Reducer three is\", {demo});\n    return (\n        <div className=\"Home\">\n            <div className=\"Home-text\">\n                <ScreenHeader id=\"home-header\" title=\"Currently built images\"/>\n                <Table images={demo}/>\n            </div>\n        </div>\n    );\n}\n\nexport default SecondPage","import { connect } from 'react-redux'\nimport SecondPage from '../components/SecondPage'\n\nconst mapStateToProps = (state) => {\n  return {\n    details: state.details,\n    demo: state.demo\n  }\n}\n\nconst SecondPageContainer = connect(\n  mapStateToProps,\n  null\n)(SecondPage)\n\nexport default SecondPageContainer","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Card.css';\n\nconst Card = ({name}) => {\n  return (\n    <span>\n      <Link to=\"/\">\n        <div className=\"Card complete\">\n          <div className=\"Card-element\">\n            <div className=\"Card-description\">{name}</div>\n          </div>\n        </div>\n      </Link>\n    </span>\n  );\n}\n\nexport default Card;","import React, { Component } from 'react';\nimport Card from '../Card';\nimport '../../App.css';\nimport './Gallery.css';\n\nclass EditableGallery extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: \"\"\n    };\n  }\n\n  handleSearchChange = (event) => {\n    this.setState({search: event.target.value.toLowerCase()});\n    console.log(this.state)\n  }\n\n  render() {\n    const {elements} = this.props;\n    const {search} = this.state;\n    const filteredElements = {elements}.elements.images.filter(element => element.name.toLowerCase().includes(search));\n    console.log(\"Hey look here\", {filteredElements})\n    return (\n      <div>\n        <input\n          className=\"search\"\n          type=\"text\"\n          value={search}\n          onChange={(event) => this.handleSearchChange(event)}\n          placeholder=\"Search...\"/>\n        <div className=\"Elements\">\n          {\n            filteredElements.map(element => {\n              return  <span key={element.id} className=\"Element\">\n                        <Card name={element.name}/>\n                      </span>\n            })\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EditableGallery;","import React from 'react'\nimport ScreenHeader from '../ScreenHeader';\nimport './ThirdPage.css'\nimport Gallery from '../Gallery';\n\n//<ScreenHeader title=\"Plants\"/>\n//<Gallery elements={students}/>\n\nconst ThirdPage = ({demo}) => {\n    console.log(\"Reducer third page is \", {demo})\n\n    return (\n        <div className=\"Home\">\n            <div className=\"Home-text\">\n            <ScreenHeader id=\"home-header\" title=\"Find your image\"/>\n            <Gallery elements={demo}/>\n         </div>\n        </div>\n        );\n    }\n\nexport default ThirdPage","import { connect } from 'react-redux'\nimport ThirdPage from '../components/ThirdPage'\n\nconst mapStateToProps = (state) => {\n  return {\n    details: state.details,\n    demo: state.demo\n  }\n}\n\nconst ThirdPageContainer = connect(\n  mapStateToProps,\n  null\n)(ThirdPage)\n\nexport default ThirdPageContainer","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport DashboardContainer from './container/DashboardContainer'\nimport SecondPageContainer from './container/SecondPageContainer'\nimport ThirdPageContainer from './container/ThirdPageContainer'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header/>\n        <div className=\"Content\">\n          <Switch>\n            <Route exact path=\"/\" component={DashboardContainer}/>\n            <Route exact path=\"/page-two\" component={SecondPageContainer}/>\n            <Route exact path=\"/page-three\" component={ThirdPageContainer}/>\n          </Switch>\n        </div>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router} from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { combineReducers } from 'redux'\nimport 'semantic-ui-css/semantic.min.css';\n\nconst elements = {\n  images: [\n    { id: 1, name: 'CMSSW_10_6_8_patch1', tag: '2020-02-19-df153472', createdAt: '2020-02-19'},\n    { id: 2, name: 'CMSSW_10_6_8_patch1', tag: '2020-05-12-cdf5c9a1', createdAt: '2020-05-12'},\n    { id: 3, name: 'CMSSW_7_1_25_patch5', tag: '2020-02-13-899c1373', createdAt: '2020-02-13'},\n    { id: 4, name: 'CMSSW_7_1_25_patch5', tag: '2020-02-18-847c8252', createdAt: '2020-02-18'},\n    { id: 5, name: 'CMSSW_9_2_1', tag: '2020-02-19-df153472', createdAt: '2020-02-19'},\n    { id: 6, name: 'CMSSW_9_3_9', tag: '2020-02-19-5e7c8abc', createdAt: '2020-02-19'},\n  ]\n}\n\nconst myReducer = (state = elements, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n}\n\nconst store = createStore(\n  combineReducers({\n    demo: myReducer\n  })\n);\n\nconsole.log(\"Reducer is\", store.getState());\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}