{"version":3,"sources":["cms-logo.png","components/Header/index.js","components/Footer/index.js","components/ScreenHeader/index.js","components/Dashboard/index.js","container/DashboardContainer.js","components/Table/index.js","components/DropDown/index.js","components/DownShift/index.js","components/DownShift2/index.js","components/SecondPage/index.js","container/SecondPageContainer.js","components/CodeBox/index.js","components/Card/index.js","components/Gallery/index.js","components/Table2/index.js","components/ThirdPage/index.js","container/ThirdPageContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","key","exact","to","activeClassName","Footer","href","target","rel","Icon","name","ScreenHeader","title","Dashboard","details","demo","src","logo","alt","DashboardContainer","connect","state","Component","downShift","props","books","cmssw","onChange","selectedBook","dispatch","type","chosen_release","alert","itemToString","getInputProps","getItemProps","isOpen","inputValue","highlightedIndex","selectedItem","getLabelProps","highlightedItem","getToggleButtonProps","toggleMenu","clearSelection","style","marginTop","display","placeholder","text","filter","item","release","toLowerCase","includes","map","index","isActive","isSelected","backgroundColor","fontWeight","require","DownShiftContainer","buildImage","console","log","Autocomplete","event","value","selected","kind","selected_release","scram_arch_list","scram_archs","selected_scram_arch","scram_arch","request_image","request_scram_arch","id","options","getOptionLabel","option","width","height","renderInput","params","TextField","label","margin","fullWidth","useStyles","makeStyles","theme","createStyles","root","spacing","borderColor","classes","alignItems","justifyContent","inputRoot","SecondPage","releases","compatible_scram_archs","compatible_scram_arch","c","class","image","SecondPageContainer","CodeBox","useState","copied","setCopied","Popup","trigger","join","onCopy","timeout","setTimeout","clearTimeout","content","open","inverted","Card","zoom","setZoomed","onClick","activeclassname","Table","columns","data","filterInput","setFilterInput","useTable","useFilters","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setFilter","e","undefined","headerGroup","getHeaderGroupProps","headers","column","render","row","i","getRowProps","cells","cell","background","getCellProps","ThirdPage","images","elements","bkg_colours","useMemo","accessor","Cell","fake","ThirdPageContainer","App","path","component","Boolean","window","location","hostname","match","initialState","defaultDownShift","initalBuildImageState","store","createStore","combineReducers","action","new_chosen_release","getState","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"ikCAAAA,EAAOC,QAAU,IAA0B,sC,usuGCc5BC,G,cAVA,WACb,OACE,yBAAKC,UAAU,UACb,kBAAC,IAAD,CAASC,IAAI,OAAOD,UAAU,cAAcE,OAAK,EAACC,GAAG,IAAIC,gBAAgB,UAAzE,QACA,kBAAC,IAAD,CAASH,IAAI,cAAcD,UAAU,cAAcE,OAAK,EAACC,GAAG,YAAYC,gBAAgB,UAAxF,eACA,kBAAC,IAAD,CAASH,IAAI,aAAaD,UAAU,cAAcE,OAAK,EAACC,GAAG,cAAcC,gBAAgB,UAAzF,iB,gBCLS,SAASC,IACtB,OACE,4BAAQL,UAAU,iBAChB,yEACA,0BAAMA,UAAU,SAChB,uBAAGM,KAAM,IAAKC,OAAO,SAASC,IAAI,uBAC9B,kBAACC,EAAA,EAAD,CAAMC,KAAK,SADf,SAGE,uBAAGJ,KAAM,IAAKC,OAAO,SAASC,IAAI,uBAChC,kBAACC,EAAA,EAAD,CAAMC,KAAK,cADb,UAGF,uBACIJ,KAAM,IACNC,OAAO,SACPC,IAAI,uBAEJ,kBAACC,EAAA,EAAD,CAAMC,KAAK,iBALf,W,WCJSC,EARM,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACrB,OACE,4BAAQZ,UAAU,iBAChB,wBAAIA,UAAU,gBAAgBY,K,2BCYrBC,EAbG,SAAC,GAAoB,EAAnBC,QAAmB,EAAVC,KAC3B,OACE,yBAAKf,UAAU,QACb,yBAAKA,UAAU,eACf,yBAAKA,UAAU,aACb,yBAAKgB,IAAKC,IAAMjB,UAAU,WAAWkB,IAAI,SACzC,wBAAIlB,UAAU,gBAAd,2CACA,+DCGOmB,EALYC,aAPH,SAACC,GACvB,MAAO,CACLP,QAAS,EACTC,KAAMM,EAAMN,QAMd,KAFyBK,CAGzBP,G,iBCVkBS,Y,gCCyFMF,aANF,SAACC,GACvB,MAAO,CACLE,UAAWF,EAAME,aAMnB,KAFwBH,EAvFP,SAACI,GAGlB,IAAMC,EAAQD,EAAMC,MACND,EAAME,MAapB,OACE,kBAAC,IAAD,CACEC,SAba,SAACC,EAAcF,IAChB,IAAVA,EACFF,EAAMK,SAAS,CACbC,KAAM,SACNC,eAAgB,CAACH,gBAAcA,eAGjCI,MAAM,QAONC,aAAc,SAAAR,GAAK,OAAKA,EAAQA,EAAMf,KAAO,MAE5C,gBACCwB,EADD,EACCA,cACAC,EAFD,EAECA,aACAC,EAHD,EAGCA,OACAC,EAJD,EAICA,WACAC,EALD,EAKCA,iBACAC,EAND,EAMCA,aAEAC,GARD,EAOCC,gBAPD,EAQCD,eARD,EASCE,qBATD,EAUCC,WAVD,EAWCC,eAXD,OAaC,6BACE,yCACEC,MAAO,CAAEC,UAAW,OAAQC,QAAS,UACjCP,MAEG,IACT,6BACA,0BACMN,EAAc,CAChBc,YAAaxB,EAAMyB,QAGtBb,EACC,yBAAKpC,UAAU,sBACZyB,EACEyB,QACC,SAAAC,GAAI,OACDd,GACDc,EAAKC,QAAQC,cAAcC,SAASjB,EAAWgB,kBAElDE,KAAI,SAACJ,EAAMK,GAAP,OACH,uCACExD,UAAU,iBACNmC,EAAa,CACflC,IAAKkD,EAAKC,QACVI,QACAL,OACAM,SAAUnB,IAAqBkB,EAC/BE,WAAYnB,IAAiBY,IAPjC,CAQEN,MAAO,CACLc,gBACErB,IAAqBkB,EAAQ,YAAc,QAC7CI,WAAYrB,IAAiBY,EAAO,OAAS,YAG9CA,EAAKC,aAIZ,Y,iBC1EdS,EAAQ,KAGR,IA6DiBC,EALY1C,aAPH,SAACC,GACvB,MAAO,CACLE,UAAWF,EAAME,UACjBwC,WAAY1C,EAAM0C,cAMpB,KAFyB3C,EAxDZ,SAACI,GA+BhB,OAFAwC,QAAQC,IAAI,QAAUzC,EAAMuC,YAGxB,6BACA,kBAACG,EAAA,EAAD,CACEvC,SAAU,SAACwC,EAAOC,GAAR,OAhCC,SAACC,EAAUC,GAE1B,IAAMC,EAA+B,MAAZF,EAAmB,GAAKA,EAASjB,QACpDoB,EAA8B,MAAZH,EACpB,CACEjB,QAAS,GACTqB,YAAa,IACXJ,EACFK,EAAkC,MAAZL,EAAmB,GAAKA,EAASM,WAE/C,YAATL,GACH9C,EAAMK,SAAS,CACbC,KAAM,gBACN8C,cAAeL,IAEjB/C,EAAMK,SAAS,CACbC,KAAM,yBACN0C,gBAAiBA,KAEA,eAATF,GACV9C,EAAMK,SAAS,CACbC,KAAM,qBACN+C,mBAAoBH,IAUQ/C,CAASyC,EAAO5C,EAAM8C,OAClDQ,GAAItD,EAAMyB,KACV8B,QAASvD,EAAMC,MACfuD,eAAgB,SAACC,GAAD,OAAYA,EAAO7B,SACnCP,MAAO,CAAEqC,MAAO,IAAKC,OAAQ,KAC7BC,YAAa,SAACC,GAAD,OAAY,kBAACC,EAAA,EAAD,iBACjBD,EADiB,CAErBE,MAAO/D,EAAMyB,KACbuC,OAAO,SACPC,WAAS,Y,0BC5CfC,G,OAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACFZ,MAAO,IACP,YAAa,CACTpC,UAAW8C,EAAMG,QAAQ,IAE7B,2CAA4C,CACxCC,YAAa,cAyERlC,EALY1C,aAPH,SAACC,GACvB,MAAO,CACLE,UAAWF,EAAME,UACjBwC,WAAY1C,EAAM0C,cAMpB,KAFyB3C,EA9DX,SAACI,GAAW,IAAD,EA6BrByE,EAAUP,IAGhB,OAFA1B,QAAQC,IAAI,QAAUzC,EAAMuC,YAGxB,yBAAK/D,UAAWiG,EAAQH,MACxB,kBAAC5B,EAAA,GAAD,GAAcrB,MAAO,CACnBE,QAAS,OACTmD,WAAY,SACZC,eAAgB,UAEhBxE,SAAU,SAACwC,EAAOC,GAAR,OArCC,SAACC,EAAUC,GAE1B,IAAMC,EAA+B,MAAZF,EAAmB,GAAKA,EAASjB,QACpDoB,EAA8B,MAAZH,EACpB,CACEjB,QAAS,GACTqB,YAAa,IACXJ,EACFK,EAAkC,MAAZL,EAAmB,GAAKA,EAASM,WAE/C,YAATL,GACH9C,EAAMK,SAAS,CACbC,KAAM,gBACN8C,cAAeL,IAEjB/C,EAAMK,SAAS,CACbC,KAAM,yBACN0C,gBAAiBA,KAEA,eAATF,GACV9C,EAAMK,SAAS,CACbC,KAAM,qBACN+C,mBAAoBH,IAeQ/C,CAASyC,EAAO5C,EAAM8C,OAClDQ,GAAItD,EAAMyB,KACV8B,QAASvD,EAAMC,MACfuD,eAAgB,SAACC,GAAD,OAAYA,EAAON,aARrC,sBASS,CAAEO,MAAO,IAAKC,OAAQ,MAT/B,6BAUe,SAACE,GAAD,OAAY,kBAACC,EAAA,EAAD,iBACjBD,EADiB,CAErBE,MAAO/D,EAAMyB,KACbuC,OAAO,SACPxF,UAAWiG,EAAQG,UACnBX,WAAS,QAff,QCcSY,EAhDI,SAAC7E,GAEhB,IAAM8E,EAAW9E,EAAMT,KAAKuF,SACtBC,EAAyB/E,EAAMuC,WAAWyC,sBAAsB/B,YAAYlB,KAAK,SAAAkD,GAInF,MAHY,CACR9B,WAAY8B,MAKpB,OAEI,yBAAKzG,UAAU,QACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,aACX,kBAAC,EAAD,CAAc8E,GAAG,cAAclE,MAAM,sBAGzC,yBAAK8F,MAAM,cACP,yBAAKA,MAAM,YACP,yBAAK7D,MAAO,CACZqD,WAAY,SACZC,eAAgB,WAEZ,uBAAGnG,UAAU,aAAb,yDACA,uBAAGA,UAAU,eAA0C,KAA3BwB,EAAMuC,WAAW4C,MAAe,OAASnF,EAAMuC,WAAW4C,OACtF,uBAAG3G,UAAU,aAAb,qDACA,uBAAGA,UAAU,eAA+C,KAAhCwB,EAAMuC,WAAWY,WAAoB,OAASnD,EAAMuC,WAAWY,eAMvG,yBAAK+B,MAAM,eACP,yBAAKA,MAAM,YACP,yBAAK7D,MAAO,CACRqD,WAAY,SACZC,eAAgB,WAEhB,2BAAG,kBAAC,EAAD,CAAU1E,MAAO6E,EAAUhC,KAAK,UAAUrB,KAAK,oBAClD,+BAAI,kBAAC,EAAD,CAAWxB,MAAO8E,EAAwBjC,KAAK,aAAarB,KAAK,8BC7ClF2D,EALaxF,aARJ,SAACC,GACvB,MAAO,CACLN,KAAMM,EAAMN,KACZQ,UAAWF,EAAME,UACjBwC,WAAY1C,EAAM0C,cAMpB,KAF0B3C,CAG1BiF,G,4CC4BaQ,G,OAnCC,SAAC,GAAY,IAAX5D,EAAU,EAAVA,KAAU,EACE6D,oBAAS,GADX,mBACnBC,EADmB,KACXC,EADW,KAY1B,OACE,yBAAKhH,UAAU,aACb,yBACEA,UAAU,YAEXiD,EACC,kBAACgE,EAAA,EAAD,CACEC,QACE,kBAAC,kBAAD,CACEjE,KAAM,CAACA,QAAMA,KAAKkE,KAAK,IACvBC,OAnBS,WACnBJ,GAAU,GAEV,IAAMK,EAAUC,YAAW,WACzBN,GAAU,GACVO,aAAaF,KAVQ,QA0Bb,kBAAC5G,EAAA,EAAD,CAAMC,KAAK,eAAeV,UAAU,eAGxCwH,QAAQ,UACRC,KAAMV,EACNW,UAAQ,OCHHC,EA5BF,SAAC,GAAmB,IAAlBjH,EAAiB,EAAjBA,KAAOuC,EAAU,EAAVA,KAAU,EAEJ6D,oBAAS,GAFL,mBAEvBc,EAFuB,KAEjBC,EAFiB,KAc9B,OACE,0BAAMC,QAAS,kBAAMF,GAVrBC,GAAU,QACV7D,QAAQC,IAAI,CAAC4D,gBAIXA,GAAU,QACV7D,QAAQC,IAAI,CAAC4D,iBAKb,kBAAC,IAAD,CAAM1H,GAAG,eACP,yBAAKH,UAAU,OAAO+H,gBAAgB,eACpC,yBAAK/H,UAAU,gBACb,yBAAKA,UAAU,oBAAoBU,GACnC,kBAAC,EAAD,CAASuC,KAAMA,S,UCpBG3B,Y,iCCAf,SAAS0G,EAAT,GAAmC,IAAlBC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,KAAQ,EACTpB,mBAAS,IADA,mBACxCqB,EADwC,KAC3BC,EAD2B,OAU3CC,mBACF,CACEJ,UACAC,QAEFI,aACAC,aAZAC,EAJ6C,EAI7CA,cACAC,EAL6C,EAK7CA,kBACAC,EAN6C,EAM7CA,aACAC,EAP6C,EAO7CA,KACAC,EAR6C,EAQ7CA,WACAC,EAT6C,EAS7CA,UAiBF,OACE,oCACE,2BACA,2BACEzE,MAAO+D,EACPxG,SAZqB,SAAAmH,GACzB,IAAM1E,EAAQ0E,EAAEvI,OAAO6D,YAAS2E,EAChCF,EAAU,OAAQzE,GAClBgE,EAAehE,IAUXpB,YAAa,mBAGf,kBAAC,IAAD,CAAgBmC,OAAO,SACvB,0BACMqD,IACJ,+BACGE,EAAanF,KAAI,SAAAyF,GAAW,OAC3B,uBAAQA,EAAYC,sBACjBD,EAAYE,QAAQ3F,KAAI,SAAA4F,GAAM,OAC7B,4BACGA,EAAOC,OAAO,mBAMzB,0BAAWX,IACRE,EAAKpF,KAAI,SAAC8F,EAAKC,GAEd,OADAV,EAAWS,GAET,uBAAQA,EAAIE,cACTF,EAAIG,MAAMjG,KAAI,SAAAkG,GAEb,OADAzF,QAAQC,IAAI,UAAWwF,EAAKN,OAAOpJ,QAEjC,sCAAI8C,MAAO,CAAE6G,WAAmC,aAAvBD,EAAKN,OAAOpJ,OAAwB,UAAY,OAAY0J,EAAKE,gBAAiBF,EAAKL,OAAO,oB,aCa5HQ,EApDG,SAAC,GAAY,IACrBC,EADoB,EAAV9I,KACW+I,SAASD,OACpC7F,QAAQC,IAAI,yBAA0B,CAAC4F,WACvC7F,QAAQC,IAAI,eAEZ,IAAM8F,EAAc,CAClB,KAAQ,UACR,SAAY,WAKR9B,EAAU+B,mBACZ,iBAAM,CACJ,CACEjK,OAAQ,OACRkK,SAAU,QAEZ,CACElK,OAAQ,MACRkK,SAAU,OAEb,CACGlK,OAAQ,WACRkK,SAAU,MACVC,KAAM,gBAAW9F,EAAX,EAAGqF,KAAQrF,MAAX,OAAyB,kBAAC,EAAD,CAASnB,KAAM,CAAC,cAAemB,OAEhE,CACErE,OAAQ,SACRkK,SAAU,SACVC,KAAM,gBAAW9F,EAAX,EAAGqF,KAAQrF,MAAX,OAAyB,0BAAMpE,UAAU,QAAQ6C,MAAS,CAAEc,gBAAiBoG,EAAY3F,KAAWA,KAE5G,CACErE,OAAQ,aACRkK,SAAU,iBAOlB,OAFAjG,QAAQC,IAAIkG,GAGR,yBAAKnK,UAAU,QACX,yBAAKA,UAAU,eACf,yBAAKA,UAAU,aACf,wBAAIA,UAAU,gBAAd,gBACA,kBAAC,EAAD,CAAQiI,QAASA,EAASC,KAAMiC,OCvD7BC,EALYhJ,aANH,SAACC,GACvB,MAAO,CACLN,KAAMM,EAAMN,QAMd,KAFyBK,CAGzBwI,GCeaS,E,uKAhBX,OACE,6BACE,kBAAC,EAAD,MACA,yBAAKrK,UAAU,WACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOE,OAAK,EAACoK,KAAK,IAAIC,UAAWpJ,IACjC,kBAAC,IAAD,CAAOjB,OAAK,EAACoK,KAAK,YAAYC,UAAW3D,IACzC,kBAAC,IAAD,CAAO1G,OAAK,EAACoK,KAAK,cAAcC,UAAWH,MAG/C,kBAAC,EAAD,W,GAZU9I,aCGEkJ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,WCJAC,EAAe,CACnBf,S,OACAxD,S,QAUIwE,EAAmB,CACvB/I,eAAgB,IAeZgJ,EAAwB,CAC5BpE,MAAO,GACPhC,WAAY,GACZ6B,sBAAuB,CACrBpD,QAAS,GACTqB,YAAa,KA8BXuG,EAAQC,YACZC,YAAgB,CACdnK,KA5DkB,WAAmC,IAAlCM,EAAiC,uDAAzBwJ,EAAcM,EAAW,uCAGlD,OAFIA,EAAOrJ,KAEJT,GA0DTE,UAlDqB,WAAuC,IAAtCF,EAAqC,uDAA7ByJ,EAAkBK,EAAW,uCACvDC,EAAqBD,EAAOpJ,eAClC,OAAQoJ,EAAOrJ,MACb,IAAK,SACH,MAAO,CACLC,eAAgBqJ,GAEpB,QACE,OAAO/J,IA2CT0C,WA9BsB,WAA4C,IAA3C1C,EAA0C,uDAAlC0J,EAAuBI,EAAW,uCAC7DvG,EAAgBuG,EAAOvG,cACvBC,EAAqBsG,EAAOtG,mBAC5BL,EAAkB2G,EAAO3G,gBAC/B,OAAQ2G,EAAOrJ,MACb,IAAK,gBACH,OAAO,2BACFT,GADL,IAEEsF,MAAO/B,EACPD,WAAY,KAEhB,IAAK,qBACH,OAAO,2BACFtD,GADL,IAEEsD,WAAYE,IAEhB,IAAK,yBACH,OAAO,2BACFxD,GADL,IAEEmF,sBAAuBhC,IAE3B,QACE,OAAOnD,OAYb2C,QAAQC,IAAI,aAAc+G,EAAMK,YAEhCC,IAASlC,OACP,kBAAC,IAAD,CAAU4B,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJO,SAASC,eAAe,SDsCpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLhI,QAAQgI,MAAMA,EAAMC,c","file":"static/js/main.97264971.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cms-logo.9ce63631.png\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Header.css';\n\nconst Header = () => {\n  return (\n    <nav className=\"Header\">\n      <NavLink key=\"home\" className=\"Header-link\" exact to=\"/\" activeClassName=\"active\">Home</NavLink>\n      <NavLink key=\"second-page\" className=\"Header-link\" exact to=\"/page-two\" activeClassName=\"active\">Second Page</NavLink>\n      <NavLink key=\"third-page\" className=\"Header-link\" exact to=\"/page-three\" activeClassName=\"active\">Third Page</NavLink>\n    </nav>\n  );\n}\n\nexport default Header;","import React from \"react\";\nimport { Icon } from \"semantic-ui-react\";\nimport \"./Footer.css\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"footer-bottom\">\n      <span>Copyright © 2020 Adelina - peace out</span>\n      <span className='links'>\n      <a href={'/'} target=\"_blank\" rel=\"noopener noreferrer\">\n          <Icon name=\"book\"></Icon> Docs\n        </a>\n        <a href={'/'} target=\"_blank\" rel=\"noopener noreferrer\">\n          <Icon name=\"discourse\"></Icon> Forum\n        </a>\n      <a\n          href={'/'}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon name=\"conversation\"></Icon> Chat\n        </a>\n      </span>\n    </footer>\n  );\n}","import React from 'react';\nimport './ScreenHeader.css';\n\nconst ScreenHeader = ({title}) => {\n  return (\n    <header className=\"Screen-header\">\n      <h1 className=\"Screen-title\">{title}</h1>\n    </header>\n  );\n}\n\nexport default ScreenHeader;","import React from 'react';\nimport ScreenHeader from '../ScreenHeader';\nimport './Dashboard.css';\nimport logo from '../../cms-logo.png';\n\nconst Dashboard = ({details, demo}) => {\n  return (\n    <div className=\"Home\">\n      <div className=\"Background\"></div>\n      <div className=\"Home-text\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1 className=\"Screen-title\">Service for CMSSW Docker image building</h1>\n        <p>Build your CMS docker images!</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;","import { connect } from 'react-redux'\nimport Dashboard from '../components/Dashboard'\n\nconst mapStateToProps = (state) => {\n  return {\n    details: 0,\n    demo: state.demo\n  };\n};\n\nconst DashboardContainer = connect(\n  mapStateToProps,\n  null\n)(Dashboard)\n\nexport default DashboardContainer","import React, { Component } from 'react'\nimport './Table.css';\n\nclass Table extends Component {\n\n    renderTableData(images) {\n        return images.map((student, index) => {\n        const { id, name, tag, createdAt } = student //destructuring\n        return (\n            <tr key={id}>\n                <td>{id}</td>\n                <td>{name}</td>\n                <td>{tag}</td>\n                <td>{createdAt}</td>\n            </tr>\n        )\n        })\n    }\n\n    renderTableHeader(images) {\n        let header = Object.keys(images[0])\n        return header.map((key, index) => {\n        return <th key={index}>{key.toUpperCase()}</th>\n        })\n    }\n\n    render() {\n        var test = this.props;\n        console.log({test}.test.images.images)\n        return (\n        <div>\n            <table id='students'>\n                <tbody>\n                    <tr>{this.renderTableHeader({test}.test.images.images)}</tr>\n                    {this.renderTableData({test}.test.images.images)}\n                </tbody>\n            </table>\n        </div>\n        )\n    }\n}\n\nexport default Table","import React from \"react\";\nimport Downshift from \"downshift\";\nimport './DropDown.css'\nimport { connect } from 'react-redux'\n\nconst MyDownPage = (props) =>  {\n\n\n  const books = props.books;\n  const cmssw = props.cmssw;\n\n  const onChange = (selectedBook, cmssw) => {\n    if (cmssw === true)  {\n      props.dispatch({\n        type: 'CHANGE',\n        chosen_release: {selectedBook}.selectedBook\n      }) \n    } else {\n      alert('hey');\n    }\n  };\n\n  return (\n    <Downshift\n      onChange={onChange}\n      itemToString={books => (books ? books.name : \"\")}\n    >\n      {({\n        getInputProps,\n        getItemProps,\n        isOpen,\n        inputValue,\n        highlightedIndex,\n        selectedItem,\n        highlightedItem,\n        getLabelProps,\n        getToggleButtonProps,\n        toggleMenu,\n        clearSelection,\n      }) => (\n        <div>\n          <label\n            style={{ marginTop: \"1rem\", display: \"block\" }}\n            {...getLabelProps()}\n          >\n          </label>{\" \"}\n          <br />\n          <input \n            {...getInputProps({ \n              placeholder: props.text \n            })} \n          />\n          {isOpen ? (\n            <div className=\"downshift-dropdown\">\n              {books\n                .filter(\n                  item =>\n                    !inputValue ||\n                    item.release.toLowerCase().includes(inputValue.toLowerCase())\n                )\n                .map((item, index) => (\n                  <div\n                    className=\"dropdown-item\"\n                    {...getItemProps({ \n                      key: item.release,\n                      index,\n                      item,\n                      isActive: highlightedIndex === index,\n                      isSelected: selectedItem === item, })}\n                    style={{\n                      backgroundColor:\n                        highlightedIndex === index ? \"lightgray\" : \"white\",\n                      fontWeight: selectedItem === item ? \"bold\" : \"normal\"\n                    }}\n                  >\n                    {item.release}\n                  </div>\n                ))}\n            </div>\n          ) : null}\n        </div>\n      )}\n    </Downshift>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    downShift: state.downShift\n  }\n}\n\nconst DropDownContainer = connect(\n  mapStateToProps,\n  null\n)(MyDownPage)\n\nexport default DropDownContainer\n","import React from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { connect } from 'react-redux';\nrequire('./DownShift.css');\n\n\nconst ComboBox = (props) => {\n\n  const onChange = (selected, kind) => {\n\n    const selected_release = selected == null ? \"\" : selected.release;\n    const scram_arch_list = selected == null \n      ? {\n          release: \"\",\n          scram_archs: []\n        } : selected;\n    const selected_scram_arch = selected == null ? \"\" : selected.scram_arch;\n\n    if ( kind === \"release\" )  {\n      props.dispatch({\n        type: 'REQUEST_IMAGE',\n        request_image: selected_release\n      })\n      props.dispatch({\n        type: 'CREATE_SCRAM_ARCH_LIST',\n        scram_arch_list: scram_arch_list\n      })\n    } else if ( kind === \"scram_arch\" ) {\n      props.dispatch({\n        type: 'REQUEST_SCRAM_ARCH',\n        request_scram_arch: selected_scram_arch\n      }) \n    }\n  };\n\n  console.log(\"books\" , props.buildImage);\n\n  return (\n      <div>\n      <Autocomplete \n        onChange={(event, value) => onChange(value, props.kind)}\n        id={props.text}\n        options={props.books}\n        getOptionLabel={(option) => option.release}\n        style={{ width: 400, height: 100}}\n        renderInput={(params) => <TextField \n            {...params} \n            label={props.text}\n            margin=\"normal\"\n            fullWidth />}\n        />\n        </div>\n    );\n  }\n\n  const mapStateToProps = (state) => {\n    return {\n      downShift: state.downShift,\n      buildImage: state.buildImage\n    }\n  }\n  \n  const DownShiftContainer = connect(\n    mapStateToProps,\n    null\n  )(ComboBox)\n  \n  export default DownShiftContainer\n  ","import React from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { connect } from 'react-redux';\nimport './DownShift.css';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n        width: 500,\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n        \"&:hover .MuiOutlinedInput-notchedOutline\": {\n            borderColor: \"red\"\n        },\n    },\n  }),\n);\n\nconst ComboBox2 = (props) => {\n\n  const onChange = (selected, kind) => {\n\n    const selected_release = selected == null ? \"\" : selected.release;\n    const scram_arch_list = selected == null \n      ? {\n          release: \"\",\n          scram_archs: []\n        } : selected;\n    const selected_scram_arch = selected == null ? \"\" : selected.scram_arch;\n\n    if ( kind === \"release\" )  {\n      props.dispatch({\n        type: 'REQUEST_IMAGE',\n        request_image: selected_release\n      })\n      props.dispatch({\n        type: 'CREATE_SCRAM_ARCH_LIST',\n        scram_arch_list: scram_arch_list\n      })\n    } else if ( kind === \"scram_arch\" ) {\n      props.dispatch({\n        type: 'REQUEST_SCRAM_ARCH',\n        request_scram_arch: selected_scram_arch\n      }) \n    }\n  };\n\n  const classes = useStyles();\n  console.log(\"books\" , props.buildImage);\n\n  return (\n      <div className={classes.root}>\n      <Autocomplete style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        }}\n        onChange={(event, value) => onChange(value, props.kind)}\n        id={props.text}\n        options={props.books}\n        getOptionLabel={(option) => option.scram_arch}\n        style={{ width: 400, height: 100}}\n        renderInput={(params) => <TextField \n            {...params} \n            label={props.text}\n            margin=\"normal\"\n            className={classes.inputRoot}\n            fullWidth />}\n        />\n        </div>\n    );\n  }\n\n  const mapStateToProps = (state) => {\n    return {\n      downShift: state.downShift,\n      buildImage: state.buildImage\n    }\n  }\n  \n  const DownShiftContainer = connect(\n    mapStateToProps,\n    null\n  )(ComboBox2)\n  \n  export default DownShiftContainer\n  ","import React from 'react'\nimport ScreenHeader from '../ScreenHeader';\nimport './SecondPage.css';\nimport Table from '../Table'\n//import { Navbar, Nav, NavItem, NavDropdown, MenuItem, Button } from 'react-bootstrap';\nimport { Form, FormControl } from 'react-form-control';\nimport { Nav, NavItem, NavLink } from 'reactstrap';\nimport MyForm from '../Form';\nimport DropDown from '../DropDown';\nimport ComboBox from '../DownShift';\nimport ComboBox2 from '../DownShift2';\n\n//<Table images={demo}/>\n//<MyForm />\n//<div>\n//<DropDown books={releases} text=\"Search CMSSW releases..\" cmssw={true}/>\n//</div>\n//<div>\n//<DropDown books={books2} text=\"Search SCRAM versions..\" cmssw={false}/>\n//</div>\n\nconst SecondPage = (props) => {\n\n    const releases = props.demo.releases;\n    const compatible_scram_archs = props.buildImage.compatible_scram_arch.scram_archs.map( c => {\n        var info =  {\n            scram_arch: c\n        }\n        return info;\n    })\n\n    return (\n        \n        <div className=\"Home\">\n            <div className=\"Background\"></div>\n                <div className=\"Home-text\">\n                    <ScreenHeader id=\"home-header\" title=\"Request an image\"/>\n                </div>\n                \n                <div class=\"split left\">\n                    <div class=\"centered\">\n                        <div style={{\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        }}>\n                            <p className=\"Page-text\">1. Start by choosing a CMSSW release. You have chosen</p>\n                            <p className=\"Chosen-text\">{props.buildImage.image === \"\" ? \"None\" : props.buildImage.image}</p>\n                            <p className=\"Page-text\">2. Choose the SCRAM ARCH version. You have chosen</p>\n                            <p className=\"Chosen-text\">{props.buildImage.scram_arch === \"\" ? \"None\" : props.buildImage.scram_arch}</p>\n                        </div>\n                    </div>\n                </div>\n  \n\n                <div class=\"split right\">\n                    <div class=\"centered\">\n                        <div style={{\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            }}>\n                            <p><ComboBox books={releases} kind=\"release\" text=\"CMSSW releases\"/></p>\n                            <p> <ComboBox2 books={compatible_scram_archs} kind=\"scram_arch\" text=\"SCRAM ARCH versions\"/></p>\n                        </div>\n                    </div>\n                </div> \n        </div>\n    );\n}\n\nexport default SecondPage","import { connect } from 'react-redux'\nimport SecondPage from '../components/SecondPage'\n\nconst mapStateToProps = (state) => {\n  return {\n    demo: state.demo,\n    downShift: state.downShift,\n    buildImage: state.buildImage\n  }\n}\n\nconst SecondPageContainer = connect(\n  mapStateToProps,\n  null\n)(SecondPage)\n\nexport default SecondPageContainer","import React, { useState } from \"react\";\nimport { Icon, Popup } from \"semantic-ui-react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport \"./CodeBox.css\";\n\nconst COPY_CHECK_TIMEOUT = 1500;\n\nconst CodeBox = ({text}) => {\n  const [copied, setCopied] = useState(false);\n\n  const handleCopied = () => {\n    setCopied(true);\n\n    const timeout = setTimeout(() => {\n      setCopied(false);\n      clearTimeout(timeout);\n    }, COPY_CHECK_TIMEOUT);\n  };\n\n  return (\n    <div className=\"container\">\n      <div\n        className=\"content\">\n      </div>\n      {text}\n        <Popup\n          trigger={\n            <CopyToClipboard\n              text={{text}.text.join(\"\")}\n              onCopy={handleCopied}\n            >\n              <Icon name=\"copy outline\" className=\"copy-icon\" />\n            </CopyToClipboard>\n          }\n          content=\"Copied!\"\n          open={copied}\n          inverted\n        />\n    </div>\n  );\n}\n\nexport default CodeBox;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Card.css';\nimport CodeBox from '../CodeBox';\n\nconst Card = ({name , text}) => {\n\n  const [zoom, setZoomed] = useState(false);\n\n  const handleZoomIn = () => {\n    setZoomed(true);\n    console.log({setZoomed});\n  }\n\n  const handleZoomOut = () => {\n      setZoomed(false);\n      console.log({setZoomed});\n  }\n\n  return (\n    <span onClick={() => zoom ? handleZoomIn() : handleZoomOut()}>\n      <Link to=\"/page-three\">\n        <div className=\"Card\" activeclassname=\"active-card\">\n          <div className=\"Card-element\">\n            <div className=\"Card-description\">{name}</div>\n            <CodeBox text={text}/>\n          </div>\n        </div>\n      </Link>\n    </span>\n  );\n}\n\nexport default Card;","import React, { Component } from 'react';\nimport Card from '../Card';\nimport '../../App.css';\nimport './Gallery.css';\n\nclass EditableGallery extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: \"\"\n    };\n  }\n\n  handleSearchChange = (event) => {\n    this.setState({search: event.target.value.toLowerCase()});\n    console.log(this.state)\n  }\n\n  render() {\n    //const {elements} = this.props;\n    const {search} = this.state;\n    const filteredElements = this.props.images.filter(element => element.name.toLowerCase().includes(search));\n    console.log(\"Hey look here\", {filteredElements})\n    return (\n      <div>\n        <input\n          className=\"search\"\n          type=\"text\"\n          value={search}\n          onChange={(event) => this.handleSearchChange(event)}\n          placeholder=\"Search...\"/>\n        <div className=\"Elements\">\n          {\n            filteredElements.map(element => {\n              console.log({element}.element);\n              return  <span key={element.id} className=\"Element\">\n                        <Card name={element.name} text={[\"docker pull \", {element}.element.pull]}/>\n                      </span>\n            })\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EditableGallery;","import React, { useState } from \"react\";\nimport { useTable, useFilters, useSortBy } from \"react-table\";\nimport TableScrollbar from 'react-table-scrollbar';\nimport './Table2.css';\n\nexport default function Table({ columns, data }) {\n  const [filterInput, setFilterInput] = useState(\"\");\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    setFilter\n  } = useTable(\n    {\n      columns,\n      data\n    },\n    useFilters,\n    useSortBy\n  );\n\n  const handleFilterChange = e => {\n    const value = e.target.value || undefined;\n    setFilter(\"name\", value);\n    setFilterInput(value);\n  };\n\n  // Render the UI for your table\n  return (\n    <>\n      <p>\n      <input\n        value={filterInput}\n        onChange={handleFilterChange}\n        placeholder={\"Search name..\"}\n      />\n      </p>\n      <TableScrollbar height=\"600px\">\n      <table\n        {...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th>\n                  {column.render(\"Header\")}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  console.log(\"Cell is\", cell.column.Header)\n                  return (\n                    <td style={{ background: cell.column.Header === \"Pull URL\" ? \"#f5ecec\" : null }} {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      </TableScrollbar>\n    </>\n  );\n}\n","import React, { useMemo, useState, useEffect }  from 'react'\nimport ScreenHeader from '../ScreenHeader';\nimport './ThirdPage.css'\nimport Gallery from '../Gallery';\nimport Table2 from '../Table2'\nimport '../Table2/Table2.css';\nimport CodeBox from '../CodeBox';\n\nimport fake from '../../data/fake.json';\n\n//<Gallery images={images} />\n\nconst Genres = ({ values }) => {\n    console.log(\"values ar\", values)\n    return (\n      <>\n        <span key={values} className=\"badge\">\n            {values}\n        </span>\n      </>\n    );\n  };\n\nconst ThirdPage = ({demo}) => {\n    const images = {demo}.demo.elements.images;\n    console.log(\"Reducer third page is \", {images})\n    console.log(\"Hey Clemens\")\n\n    const bkg_colours = {\n      \"done\": \"#9ae6b4\",\n      \"building\": \"#9abbe6\"\n    }\n\n    const backgroundColor = \"blue\";\n\n    const columns = useMemo(\n        () => [\n          {\n            Header: \"Name\",\n            accessor: \"name\"\n          },\n          {\n            Header: \"Tag\",\n            accessor: \"tag\"\n          },\n         {\n            Header: \"Pull URL\",\n            accessor: \"url\",\n            Cell: ({ cell: { value } }) => <CodeBox text={[\"docker pull\", value]}/>\n          },\n          {\n            Header: \"Status\",\n            accessor: \"status\",\n            Cell: ({ cell: { value } }) => <span className=\"badge\" style = {{ backgroundColor: bkg_colours[value] }}>{value}</span>\n          },\n          {\n            Header: \"Created At\",\n            accessor: \"createdAt\"\n          }\n        ],\n      );\n\n    console.log(fake);\n\n    return (\n        <div className=\"Home\">\n            <div className=\"Background\"></div>\n            <div className=\"Home-text\">\n            <h1 className=\"Screen-title\">Status Board</h1>\n            <Table2 columns={columns} data={fake}/>\n            </div>\n        </div>\n    )\n}\n\nexport default ThirdPage","import { connect } from 'react-redux'\nimport ThirdPage from '../components/ThirdPage'\n\nconst mapStateToProps = (state) => {\n  return {\n    demo: state.demo\n  }\n}\n\nconst ThirdPageContainer = connect(\n  mapStateToProps,\n  null\n)(ThirdPage)\n\nexport default ThirdPageContainer","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport DashboardContainer from './container/DashboardContainer'\nimport SecondPageContainer from './container/SecondPageContainer'\nimport ThirdPageContainer from './container/ThirdPageContainer'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header/>\n        <div className=\"Content\">\n          <Switch>\n            <Route exact path=\"/\" component={DashboardContainer}/>\n            <Route exact path=\"/page-two\" component={SecondPageContainer}/>\n            <Route exact path=\"/page-three\" component={ThirdPageContainer}/>\n          </Switch>\n        </div>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router} from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { combineReducers } from 'redux'\nimport 'semantic-ui-css/semantic.min.css';\n\nimport elements from './data/images.json';\nimport releases from './data/cmssw_releases.json';\n\nconst initialState = {\n  elements: elements,\n  releases: releases\n}\n\nconst myDemoReducer = (state = initialState, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n}\n\nconst defaultDownShift = {\n  chosen_release: \"\"\n};\n\nconst DownShiftReducer = (state = defaultDownShift, action) => {\n  const new_chosen_release = action.chosen_release;\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        chosen_release: new_chosen_release\n      }\n    default:\n      return state;\n  }\n}\n\nconst initalBuildImageState = {\n  image: \"\",\n  scram_arch: \"\",\n  compatible_scram_arch: {\n    release: \"\",\n    scram_archs: []\n  }\n};\n\nconst BuildImageReducer = (state = initalBuildImageState, action) => {\n  const request_image = action.request_image;\n  const request_scram_arch = action.request_scram_arch;\n  const scram_arch_list = action.scram_arch_list;\n  switch (action.type) {\n    case 'REQUEST_IMAGE':\n      return {\n        ...state,\n        image: request_image,\n        scram_arch: \"\"\n      }\n    case 'REQUEST_SCRAM_ARCH':\n      return {\n        ...state,\n        scram_arch: request_scram_arch\n      }\n    case 'CREATE_SCRAM_ARCH_LIST':\n      return {\n        ...state,\n        compatible_scram_arch: scram_arch_list\n      }\n    default:\n      return state;\n  }\n}\n\nconst store = createStore(\n  combineReducers({\n    demo: myDemoReducer,\n    downShift: DownShiftReducer,\n    buildImage: BuildImageReducer\n  })\n);\n\nconsole.log(\"Reducer is\", store.getState());\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}